
imports:
  - module: ./test/load/sources/fake_source
    source: fakeSource 
  - module: ./core/devices/device
    device: device

sources:
  - testSource: {
      type: fakeSource,
      required-parameter: somevalue
  }

# A fake device using the fake source
devices:
  - the_device: {
     type: device,
     source: testSource,
     name: the_device
  }

scenarios:
  - scenario:
      triggers: 
        - state: the_device   
        - state: the_device   # 2 triggers
      conditions:
        - {operator: 'or', 
            left: {operator: "and",
              left: {operator: "=", left: this.msg.oldValue, right: undefined},
              right: {operator: "=", left: this.msg.newValue, right: undefined}
            },
            right: {operator: "!=", left: this.msg.newValue, right: this.msg.oldValue}
        }
      actions:
        - !!js/function 'function(callback) {
            assert.equal(this.msg.oldValue, -1);
            assert.equal(this.msg.newValue, 1);
            callback(null);
            this.done()
          }'

